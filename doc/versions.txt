version 0.84
	RNGs:
		tweaked existing recommended RNGs:
			jsf32 - made more conformant to Robert Jenkins code
			jsf16 -	adjusted constants in jsf16 to improve avalanche properties
			hc256 - fixed two bugs in hc256::walk_state (could cause autoseeding to crash)
		added new recommended RNG:
			sfc16 / sfc32 / sfc64:
				relatively low quality, but very fast and small
				uses only addition, xor, shift, and barrel-shift
				state size is only 3 words
		removed existing recommended RNG:
			mwlac32 / mwlac64:
				Redundant when compared to jsf32/jsf64 to justify inclusion.  
		added new section to full version: "NonRecommended" aka "other"
			these are RNGs that are not recommended for normal usage
			they are intended for evaluating test effectiveness only
			they offer polymorphic implementations only, no raw implementations
	documentation:
		added test results for some RNGs
	example program:
		changed how results are displayed
	tests:
		added new transform: "switching"

version 0.83
	fixed issues with randi_fast methods
		missing symbol for one version, lack of return statement for another
	fixed bugs in the HC-256 implementation
		was xoring output with an uninitialized value
		was walking the output buffer in the wrong direction
	fixed license issues
		sha2 code now public domain (and smaller and a little faster)
		mt19937 code now public domain (and significantly faster)
	moved code defining standard test sets from example program to library
		new header PractRand/test_batteries.h

version 0.82
	fixed various issues preventing compilation on gcc
		now builds on MSVC & gcc/MinGW
		hopefully compatible with others as well
	added more tests:
		FPF - Floating Point Frequency, not very useful, slow on some settings
		CoupGap - Coupon / Gap hybrid, still in development but usable
	revised sample program slightly
		added get_more_tests in addition to get_core_tests and get_standard_tests*
		adjusted misc. details
	tweaked some RNGs:
		arbee: tweaked entropy accumulation & interface slightly

version 0.81
	fixed the missing symbol "randi_fast_implementation"
	fixed the bloated file sizes on PractRand.lib and PractRand_full.lib
	fixed some rare issues with uniform floating point distribution
	improved various bits of documentation
	removed various files that did not belong in this package
	now supports limited compatibility with C++0x TR1 RNG distributions
		only on vRNG8, vRNG16, vRNG32, and vRNG64
	tweaked various RNGs:
		jsf: made more conformant to Robert Jenkins code, blocked some bad states
		arbee: improved quality, eliminated bad cycles
		efiix: reverted to older faster version
	checked licenses on RNGs
		jsf, ibaa

verion 0.80 - initial release
	RNG stuff:
		RNG types
			Raw
			light-weight
			Polymorphic
			entropy pool
			inline
			template adaptor (Raw -> light-weight)
		RNG interface
			output
				RNG output type abstraction
				uniform integers
				fast (semi-)uniform integers
				uniform floating point
			seeding
				seed from 64 bit integer
				seed from any polymorphic RNG
				seed automatically
				special seeding interface for entropy pools
					default state
					add_entropy8/add_entropy16/add_entropy32/add_entropy64/add_entropy_N
					add_entropy_automatically
					flush_buffers
			other
				state walking, is useful for
					serialization
					deserialization
					checksuming
					monitoring internal state (avalanche)
					used internally for generic seeding
				optional RNG methods
					seek_forward, seek_backward
					entropy accumulation functions, see seeding / entropy pools above
		recommended RNGs:
			jsf64, jsf32, jsf16
			mwlac64, mwlac32
			clcg96_32, lcg64_32   <--- lcg64_32?  not really recommended is it?
			hc256
			isaac32x256, isaac64x256
			efiix8x256, efiix16x256, efiix32x256, efiix64x256 *still in development
			mt19937
		entropy pools:
			arbee
			sha2_based_pool
			isaac_with_sha2_pool
	Statistical tests:
		recommended tests:
			DC6
			BCFN
			Gap-16
		test transforms:
			*multiplex
			shrink
			lowbits
			FirstNofM
